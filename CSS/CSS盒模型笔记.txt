CSS盒模型：规定元素框处理元素内容、内边距、外边距以及边框的处理方式。
	
	1. 一般内边距、外边距默认为0
	2. CSS背景应用于 元素的内容+内边距+边框组合的区域
	3. 许多元素在不同的浏览器下可能会有不同的内外边距，如果想让该元素在所有浏览器中内外边距都初始化为0，可以使用通用选择器设置如下：
		* {
			padding: 0;
			margin: 0;
		}
	4. CSS中指定的width、height指的是元素内容的宽和高，增加和减少内外边距不会影响内容区域的尺寸
	
	内边距
		padding属性设置元素内边距。可以接受像素值和百分比，参数依次为上右下左，只有一个参数默认为四个边框都修改为此值
		
		
	边框
		border设置元素边框，一般修改样式，宽度和颜色
		border-style设置边框样式，总共有十种，如果将border-style设置为none，则无边框，就算width设置了宽度也没用
		border-width设置边框宽度
		定义单边宽度、值复制
		border-color设置边框颜色，透明边框和无边框不一样
		
	外边距
		margin设置外边距，可以接收所有的长度单位，甚至可以使用auto关键字，浏览器自动定义
		
	值复制(内外边距都适用)
		如果缺少左边距的值，则使用右边距
		如果缺少下边距的值，则使用上边距
		缺少右边距，则使用上边距

	外边距合并

	盒模型
		两种基本的盒模型
			block(块级元素)：默认占据一行，允许通过css设置其宽度高度
			inline(内联元素)：不会占据一行，即一行中可以放置多个组件，即便使用css设置它的宽度高度，也不会起作用，例如<span>,<a>,<img>标签
			
		display属性可以改变默认盒模型
		
		none值
			设置目标对象隐藏，并且该对象占用的页面空间也会被释放
			
		visibility
			与none一样，使目标不可见，但是占用的页面空间还会保留
			
		inline-block盒模型
			多个组件并列显示，仍然可以通过width，height设置宽和高
			一般用于多栏布局和水平导航菜单
			
		inline-table盒模型
			默认情况下，table元素属于block类型，即table元素左右两边均不允许出现其他内容
			inline-table盒模型允许通过width，height设置高度，并且允许table元素左右两边出现其他内容
			一般inline-table与vertical-align(垂直对齐方式)搭配使用
			一般用于table元素左右两边出现其他内容的时候
		
		和list相关的盒模型
			list-item：将目标组件转换为类似无序列表的列表元素


	布局相关的属性
		滚动条
			滚定方向：overflow，overflow-x，overflow-y
		
		